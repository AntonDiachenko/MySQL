/* Purpose: Creating table objects in Flix database */

/* Script Date: March 28, 2022
Developed by Anton Diachenko
*/ 

-- switch to Flix database
 -- Syntax: use database_name;
use ADFlix22H1
; 

/* create table object - Partial syntax:
create table table_name
(
	column_name data_type constraint(s),
    column_name data_type constraint(s),
    ... 
    column_name data_type constraint(s),
    
) 

where constraint defines the business rules: not not, null,
primary key (pk_), default (df_), check (ck_), unique (uq_), foreign key (fk_)
*/

/* character data type:
char(length) - fixed length
varchar(length) - variable length
*/

/* *****	Table No.1 - Customers	***** */
create table Customers
(
-- column_name data_type constraint(s)
CustID smallint auto_increment not null primary key,
CustFN varchar(20) not null,
CustMN varchar(20) null,
CustLN varchar(20) not null
)
;

-- return the definition of the table Customers
show columns
from Customers
;

-- or describe command
describe Customers
;

/* creating the lookup tables*/

/* *****	Table No.2 - Roles	***** */
create table Roles
(
	RoleID varchar(4) not null,
    RoleDescript varchar (30) not null,
    -- constraint constraint_name constraint_type
    constraint pk_Roles primary key (RoleID asc)
)
;

/* *****	Table No.3 - MovieTypes	***** */
create table MovieTypes
(
	MTypeID varchar(4) not null, 
    MTypeDescript varchar(30) not null,
    constraint pk_MovieTypes primary key (MTypeID asc)
)
;

/* *****	Table No.4 - Studios	***** */
create table Studios
(
	StudID varchar(4) not null,
	StudDescrip varchar(40) not null,
	constraint pk_Studios primary key (StudID asc)
)
;

/* *****	Table No.5 - Ratings	***** */
create table Ratings
(
	RatingID varchar(2) not null,  -- to be modified later to varchar(4)
    RatingDescrip varchar(30) not null,
    constraint pk_Ratings primary key (RatingID asc) 
)
;

/* 
modify the definition of a table object
- add column
- drop column
- change data type or field size
- rename column
- drop a constraint (pk, fk, ...)
- add a constraint
- change nullability
*/

/* modify the column RatingID column size (length) to varchar(4) in table Ratings */
-- Syntax: alter object_type object_name
alter table Ratings
-- Syntax: modify column column_name data_type constraint(s)
	modify column RatingID varchar(4) not null
;

/* return the definition of t he table Ratings */
show columns
from Ratings
;

describe Ratings
;

/* *****	Table No.6 - Formats	***** */
create table Formats
(
	FormID char(2) not null,
	FormDescrip varchar(15) not null,
	constraint pk_Formats primary key (FormID asc)
)
;

/* *****	Table No.7 - Status	***** */
create table Status
(
	StatID char(2) not null, -- to be modified later to varchar(3)
    StatDescrip varchar(20) not null,
    constraint pk_Status primary key (StatID asc)
)
;

/* change the column name to StatusID and char(3) */
alter table Status
-- Syntax: modify column column_name data_type constraint(s)
-- modify column StatID varchar(3) not null

-- Syntax: change column `old_column_name` `new_column_name` data_type constraint
	change column `StatusID` `StatID` char(3) not null
;

/* *****	Table No.8 - Participants	***** */
create table Participants
(
PartID smallint auto_increment not null,  	-- autogenerated number assigned to a new participant
PartFN varchar(20) not null,
PartMN varchar(20) null,
PartLN varchar (20) not null,
RoleID varchar(4) null, 		-- to be deleted later
constraint pk_Participants primary key (PartID asc)
)
;

 -- remove the column RoleID from table Participatns */
 alter table Participants
	drop column RoleID
 ;

/* *****	Table No.9 - DVDs	***** */
create table DVDs
(
DVDID smallint not null auto_increment,  		-- autogenerated number assigned to a new DVD
DVDName varchar(60) not null,
NumDisks tinyint not null, 		-- number of disks in DVD
YearRlsd year not null, 		-- year released
MtypeID varchar(4) not null, 	-- foreign key references to MovieTypes table
StudID varchar(4) not null,		-- foreign key references to Studios table
RatingID varchar(4) not null, 	-- foreign key references to Ratings table
FormID char(2) not null, 		-- foreign key references to Formats table
StatID char(3) not null,		-- foreign key references to Status table
constraint pk_DVDs primary key (DVDID asc)
)
;


/* *****	Table No.10 - DVDParticipants	***** */
create table DVDParticipants
(
	DVDID smallint not null, 	-- foreign key references to DVDs table
    PartID smallint not null, 	-- foreign key references to Participants table
    RoleID varchar(4) not null, 	-- foreign key references to Roles table
    constraint pk_DVDParticipants primary key
    ( -- composite primary key
		DVDID asc,
        PartID asc,
        RoleID asc
    )
)
;

/* return the definition of the DVDParticipants table */
describe DVDParticipants
;

/* *****	Table No.11 - Employees	***** */
create table Employees
(
	EmpID smallint auto_increment not null,
    EmpFN varchar(20) not null,
    EmpMN varchar(20) null,
    EmpLN varchar(20) not null,
    constraint pk_Employees primary key (EmpID asc)
) 
;

/* *****	Table No.12 - Orders	***** */
create table Orders
(
	OrderID int auto_increment not null,		-- autogenerated number assigned to a new order
	CustID smallint not null,					-- foreign key references to Customers table
    EmpID smallint not null, 					-- foreign key references to Employees table
    constraint pk_Orders primary key (OrderID asc)   
)
;

/* *****	Table No.13 - Transactions	***** */
create table Transactions
(
	TransID int auto_increment not null, 		-- autogenerated number assigned to a new transaction
    OrderID int not null,						-- foreign key references to Orders table
    DVDID smallint not null,					-- foreign key references to DVDs table
    DateOut date not null,		-- you can use datetime data type
    DateDue date not null,
    DateIn date null,			-- actual returned date
    constraint pk_Transactions primary key (TransID asc)
)
;

/*  *************************  Contacts *********************** */
create table Contacts
(
ContactID char(2) not null,
FirstName varchar(15) not null,
LastName varchar(15) not null
)
;

-- add a primary key to the Contacts
alter table Contacts
add constraint pk_Contacts primary key (ContactID asc)
;

/* change the ContactID column size to 5 characters */
alter table Contacts
	modify ContactID char(5) not null
;

/* return the definition of a table object */
describe Contacts
;

show columns 
from Contacts
;

/* return information about MySQL objects */
show tables
;

/* return the definition (structure) about the base tables in 

MySQL server 
Partial syntax:
select [all] column_name_1, column_name_2, ...
from object_name
where condition
*/

select *
from information_schema.tables
where table_schema = 'adflix22h1'
and table_type = 'BASE TABLE'
;

/* how many base table objects in Flix database */
select count(table_name) as `No. of Tables in Flix Database`
from information_schema.tables
where table_schema = 'adflix22h1'
and table_type = 'BASE TABLE'
;

/* using information_schema, return the definition of table Customers */
select *
from information_schema.columns
where table_name ='Customers'
;

/* return the definition of table Customers */
select column_name, data_type, is_nullable, column_key
from information_schema.columns
where table_name = 'Customers'
;

/* enum data type
set data type */
create table SalesOrders
(
	SONumber smallint unsigned,
    BikeModel varchar(40),
    BikeColor enum('red', 'green', 'blue', 'black'), 	-- single selection
    BikeOption set('rack', 'light', 'lock')			-- multiple selection
)
;


/* set an auto_increment to an existing primary key */

alter table Clients
add constraint pk_Clients primary key (ClientID asc)
;

alter table Clients
change ClientID ClientID smallint auto_increment
;


